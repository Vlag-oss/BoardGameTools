@page "/"
@page "/mageknight"
@using BoardGameTools.Client.ViewModels
@using BoardGameTools.Shared.Models
@inject HttpClient Http
@inject ICardViewModel cardViewModel

<h1>Mage Knight</h1>
<hr/>

<p>
    <b>Partie 1</b><br/>
    <i>
        Dans ce paragraphe on retrouvera des règles rapides et globales permettant de rejouer au jeu sans se repancher dans le livret <br/>
        Dans une future version l'utilisateur pourra se créer un compte et modifier s'il le souhaite cette partie de règle en mettant ce qui l'intéresse le plus.
    </i>
</p>

<p>
    <b>Partie 2</b><br/>
    <i>
        Dans cette partie l'utilisateur pourra utiliser l'outil d'aide au combat dans Mage Knight. <br/>
    </i><br/>
    <div class="form-group">
        <input class="form-control" type="text" placeholder="Search..." @bind="Filter" @bind:event="oninput" />
    </div>
    <br/>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Caractéristique</th>
                <th scope="col">Valeur</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var card in cards)
            {
                if (!IsVisible(card))
                    continue;
                <tr>
                    <td>@card.Id</td>
                    <td>@card.Name</td>
                    <td>@card.Characteristic</td>
                    <td>@card.Value</td>
                </tr>
            }
        </tbody>
    </table>
</p>

@code{
    private List<Card> cards = new();
    public string Filter { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync() => cards = await cardViewModel.GetCard();

    public bool IsVisible(Card card)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;
 
        if (card.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
           
        if (card.Characteristic.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;
 
        return false;
    }
}

